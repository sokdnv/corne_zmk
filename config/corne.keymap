/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_we {
            bindings = <&kp LESS_THAN>;
            key-positions = <2 3>;
        };

        combo_er {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <3 4>;
        };

        combo_ui {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        combo_io {
            bindings = <&kp GREATER_THAN>;
            key-positions = <8 9>;
        };

        combo_ei {
            bindings = <&kp ASTERISK>;
            key-positions = <3 8>;
        };

        combo_ru {
            bindings = <&kp PLUS>;
            key-positions = <4 7>;
        };

        combo_as {
            bindings = <&kp TILDE>;
            key-positions = <13 14>;
        };

        combo_sd {
            bindings = <&kp GRAVE>;
            key-positions = <14 15>;
        };

        combo_df {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <15 16>;
        };

        combo_jk {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        combo_kl {
            bindings = <&kp COLON>;
            key-positions = <20 21>;
        };

        combo_l {
            bindings = <&kp BACKSLASH>;
            key-positions = <21 22>;
        };

        combo_dk {
            bindings = <&kp DOLLAR>;
            key-positions = <15 20>;
        };

        combo_fj {
            bindings = <&kp EQUAL>;
            key-positions = <16 19>;
        };

        combo_gh {
            bindings = <&kp AMPERSAND>;
            key-positions = <17 18>;
        };

        combo_xc {
            bindings = <&kp PIPE>;
            key-positions = <26 27>;
        };

        combo_cv {
            bindings = <&kp LS(LEFT_BRACE)>;
            key-positions = <27 28>;
        };

        combo_m {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <31 32>;
        };

        como_dot {
            bindings = <&kp SEMICOLON>;
            key-positions = <32 33>;
        };

        combo_c {
            bindings = <&kp EXCLAMATION>;
            key-positions = <27 32>;
        };

        combo_vm {
            bindings = <&kp MINUS>;
            key-positions = <28 31>;
        };

        combo_ow {
            bindings = <&kp UNDERSCORE>;
            key-positions = <2 9>;
        };

        combo_caps {
            bindings = <&kp CLCK>;
            key-positions = <13 22>;
        };
    };

    behaviors {
        new_e: new_e {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_E";
            #binding-cells = <0>;
            bindings = <&kp T>, <&kp NON_US_BACKSLASH>;
        };

        new_p: new_p {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_P";
            #binding-cells = <0>;
            bindings = <&kp P>, <&kp LEFT_BRACKET>;
        };

        new_dot: new_dot {
            compatible = "zmk,behavior-tap-dance";
            label = "NEW_DOT";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp RIGHT_BRACKET>;
        };

        layers: layers {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYERS";
            #binding-cells = <0>;
            bindings = <&lt 1 BACKSPACE>, <&mo 2>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q        &kp W  &kp E         &kp R            &new_e       &kp Y    &kp U    &kp I      &kp O    &new_p                     &kp BSPC
&kp ESCAPE  &mt LSHFT A  &kp S  &kp D         &kp F            &kp G        &kp H    &kp J    &kp K      &kp L    &mt RIGHT_SHIFT SEMICOLON  &new_dot
&kp LSHFT   &kp Z        &kp X  &kp C         &kp V            &kp B        &kp N    &kp M    &kp COMMA  &kp DOT  &kp FSLH                   &kp RIGHT_SHIFT
                                &mt LALT TAB  &mt LGUI ESCAPE  &kp SPACE    &kp RET  &layers  &kp RCTRL
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LEFT_BRACKET      &kp TILDE  &kp N7        &kp N8        &kp N9        &trans    &kp UNDERSCORE  &kp AMPERSAND    &kp ASTERISK  &kp MINUS  &kp PLUS       &kp RIGHT_BRACKET
&kp LEFT_PARENTHESIS  &kp N0     &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans    &kp EQUAL       &kp DOLLAR       &kp PERCENT   &kp CARET  &kp BACKSLASH  &kp RIGHT_PARENTHESIS
&kp LEFT_BRACE        &kp GRAVE  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans    &trans          &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp PIPE       &kp RIGHT_BRACE
                                               &trans        &trans        &trans    &trans          &trans           &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &bootloader    &trans         &trans        &trans        &trans       &trans     &kp K_PREV      &kp K_STOP      &kp K_PLAY_PAUSE  &kp C_NEXT       &trans
&trans  &kp C_BRI_DEC  &kp C_BRI_INC  &kp C_VOL_DN  &kp C_VOL_UP  &trans       &trans     &kp LEFT        &kp DOWN        &kp UP_ARROW      &kp RIGHT        &trans
&trans  &bt BT_CLR     &bt BT_SEL 0   &bt BT_SEL 1  &bt BT_SEL 2  &trans       &trans     &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP      &mmv MOVE_RIGHT  &trans
                                      &trans        &trans        &mkp LCLK    &mkp RCLK  &trans          &trans
            >;
        };
    };
};
